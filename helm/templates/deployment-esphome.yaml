apiVersion: apps/v1
kind: Deployment
metadata:
  name: esphome
  labels:
    app: esphome
spec:
  replicas: 1
  selector:
    matchLabels:
      app: esphome
  template:
    metadata:
      labels:
        app: esphome
        sentinel: "1"
    spec:
      containers:
      - name: esphome
        image: ghcr.io/esphome/esphome:{{ .Values.esphome.image.tag }}
        env:
        - name: TZ
          value: Europe/Zurich
        - name: USERNAME
          value: "he"
        - name: PASSWORD
          value: {{ .Values.esphome.password }}
        securityContext:
          privileged: true
          # capabilities:
          #   add:
          #   - NET_ADMIN
          #   - NET_RAW
          #   - NET_BROADCAST
        resources:
          limits:
            memory: "1200Mi"
          requests:
            memory: "700Mi"
        volumeMounts:
        - name: esphome
          mountPath: /config
        - name: localtime
          mountPath: /etc/localtime
          readOnly: true
      volumes:
        - name: esphome
          hostPath:
            path: /home/he/esphome
        - name: localtime
          hostPath:
            path: /etc/localtime
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: floor
                operator: In
                values:
                - eg
      restartPolicy: Always
      strategy:
        type: Recreate
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      securityContext: {}

---
apiVersion: v1
kind: Service
metadata:
  name: esphome
spec:
  selector:
    app: esphome
  ports:
  - name: http
    port: 6052
    targetPort: 6052

---
apiVersion: v1
kind: Service
metadata:
  name: esphome-nodeport-service
spec:
  type: NodePort
  selector:
    app:  esphome
  ports:
    - port: 6052
      targetPort: 6052
      nodePort: 30006