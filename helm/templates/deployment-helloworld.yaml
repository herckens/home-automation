apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: floor
                operator: In
                values:
                - basement
      #   volumeMounts:
      #   - name: hello-world-volume
      #     mountPath: /usr/share/nginx/html
      # volumes:
      # - name: hello-world-volume
      #   configMap:
      #     name: hello-world

---
apiVersion: v1
kind: Service
metadata:
  name: hello-world
spec:
  selector:
    app:  hello-world
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80

# NodePort can be used to expose a service on each nodeâ€™s IP at a static port
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-nodeport-service
# spec:
#   type: NodePort
#   selector:
#     app:  hello-world
#   ports:
#     - port: 80
#       # By default and for convenience, the `targetPort` is set to
#       # the same value as the `port` field.
#       targetPort: 80
#       # Optional field
#       # By default and for convenience, the Kubernetes control plane
#       # will allocate a port from a range (default: 30000-32767)
#       nodePort: 30007

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: my-service
# spec:
#   selector:
#     app: hello-world
#   ports:
#     - protocol: TCP
#       port: 8083
#       targetPort: 80
#   # clusterIP: 10.0.171.239
#   type: LoadBalancer
# # status:
# #   loadBalancer:
# #     ingress:
# #     - ip: 192.0.2.127